using CdCSharp.SyntaxHighlight.Patterns;
using System.Drawing;

namespace CdCSharp.SyntaxHighlight.Languages;

public partial class Definitions
{
    public static Definition PythonDefinition = new(
        name: "Python",
        caseSensitive: true,
        style: new Style(
            new ColorPair(
                foreColor: Color.FromName("black"),
                backColor: Color.FromName("transparent")
            ),
            new Font(
                name: "monospace",
                size: 16f,
                style: FontStyle.Regular
            )
        ),
        patterns: new Dictionary<string, Pattern>()
    {
{
    "Comment", new BlockPattern(
            name: "Comment",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("green"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            beginsWith: "//",
            endsWith: "\n",
            escapesWith: ""
        )
},
{
    "MultiLineComment", new BlockPattern(
            name: "MultiLineComment",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("green"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            beginsWith: "/*",
            endsWith: "*/",
            escapesWith: ""
        )
},
{
    "String", new BlockPattern(
            name: "String",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("#666666"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            beginsWith: "\"",
            endsWith: "\"",
            escapesWith: "\\"
        )
},
{
    "WordGroup01", new WordPattern(
            name: "WordGroup01",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("blue"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            words:
            [
                "zfill",
                "XRangeType",
                "xor",
                "writelines",
                "write",
                "write",
                "winver",
                "whitespace",
                "WeakValueDictionary",
                "weakref",
                "WeakKeyDictionary",
                "warnoptions",
                "warnings",
                "warn_explicit",
                "warn",
                "version_info",
                "version",
                "UserString",
                "UserList",
                "UserList",
                "UserDict",
                "UserDict",
                "user",
                "uppercase",
                "upper",
                "UnpicklingError",
                "Unpickler",
                "unpack",
                "UnicodeType",
                "UnboundMethodType",
                "TypeType",
                "types",
                "turnon_sigfpe",
                "turnoff_sigfpe",
                "TupleType",
                "truth",
                "truediv",
                "translate",
                "TracebackType",
                "tracebacklimit",
                "traceback",
                "trace",
                "time",
                "tb_lineno",
                "sys",
                "swapcase",
                "subn",
                "sub",
                "sub",
                "strip",
                "StringTypes",
                "StringType",
                "StringIO",
                "string",
                "StreamWriter",
                "StreamRecoder",
                "StreamReaderWriter",
                "StreamReader",
                "stream_writer",
                "stream_reader",
                "stdout",
                "stdin",
                "stderr",
                "start",
                "stack",
                "splitfields",
                "split",
                "split",
                "span",
                "SliceType",
                "site",
                "showwarning",
                "showtraceback",
                "showsyntaxerror",
                "shelve",
                "settrace",
                "setslice",
                "setrecursionlimit",
                "setprofile",
                "setitem",
                "setdlopenflags",
                "setdefaultencoding",
                "setcheckinterval",
                "set_threshold",
                "set_seqs",
                "set_seq2",
                "set_seq1",
                "set_debug",
                "SequenceMatcher",
                "sequenceIncludes",
                "SEARCH_ERROR",
                "search",
                "sci",
                "saferepr",
                "runsource",
                "runcode",
                "rstrip",
                "rshift",
                "rjust",
                "rindex",
                "rfind",
                "return",
                "restore",
                "resetwarnings",
                "resetbuffer",
                "reset",
                "reset",
                "repr1",
                "repr_type",
                "Repr",
                "repr",
                "repr",
                "repr",
                "replace",
                "repeat",
                "register",
                "register",
                "ReferenceType",
                "ReferenceError",
                "ref",
                "real_quick_ratio",
                "readlines",
                "readline",
                "read",
                "re",
                "raw_input",
                "ratio",
                "quick_ratio",
                "PY_SOURCE",
                "PY_RESOURCE",
                "PY_FROZEN",
                "PY_COMPILED",
                "push",
                "punctuation",
                "ps2",
                "ps1",
                "ProxyTypes",
                "ProxyType",
                "proxy",
                "printable",
                "print_tb",
                "print_stack",
                "print_last",
                "print_exception",
                "print_exc",
                "print",
                "PrettyPrinter",
                "prefix",
                "pprint",
                "pprint",
                "pos",
                "pos",
                "platform",
                "PKG_DIRECTORY",
                "PicklingError",
                "Pickler",
                "PickleError",
                "pickle",
                "pickle",
                "pformat",
                "pattern",
                "path",
                "pack",
                "OutputType",
                "os",
                "or_",
                "operator",
                "open",
                "octdigits",
                "numeric",
                "NotANumber",
                "not_",
                "NoneType",
                "noload",
                "new_module",
                "new",
                "neg",
                "ndiff",
                "name",
                "MutableString",
                "mul",
                "ModuleType",
                "modules",
                "module",
                "mod",
                "mirrored",
                "MethodType",
                "maxunicode",
                "maxtuple",
                "maxstring",
                "maxother",
                "maxlong",
                "maxlist",
                "maxlevel",
                "maxint",
                "maxdict",
                "match",
                "marshal",
                "maketrans",
                "lstrip",
                "lshift",
                "lowercase",
                "lower",
                "lookup",
                "lookup",
                "LongType",
                "lock_held",
                "loads",
                "loads",
                "load_source",
                "load_module",
                "load_dynamic",
                "load_compiled",
                "load",
                "load",
                "load",
                "ljust",
                "ListType",
                "linecache",
                "letters",
                "lastindex",
                "lastgroup",
                "last_value",
                "last_type",
                "last_traceback",
                "LambdaType",
                "joinfields",
                "join",
                "isSequenceType",
                "isrecursive",
                "isreadable",
                "isNumberType",
                "isMappingType",
                "isenabled",
                "isCallable",
                "IS_LINE_JUNK",
                "is_frozen",
                "IS_CHARACTER_JUNK",
                "is_builtin",
                "invert",
                "inv",
                "IntType",
                "InteractiveInterpreter",
                "InteractiveConsole",
                "interact",
                "interact",
                "InstanceType",
                "instancemethod",
                "instance",
                "inspect",
                "InputType",
                "init_frozen",
                "init_builtin",
                "indexOf",
                "index",
                "import",
                "imp",
                "if",
                "htmlxmlsql2000db",
                "hexversion",
                "hexdigits",
                "groups",
                "groupindex",
                "groupdict",
                "group",
                "getwriter",
                "getweakrefs",
                "getweakrefcount",
                "getvalue",
                "getsourcelines",
                "getsourcefile",
                "getsource",
                "getslice",
                "getrefcount",
                "getrecursionlimit",
                "getreader",
                "getouterframes",
                "getmro",
                "getmodule",
                "getline",
                "getitem",
                "getinnerframes",
                "getframeinfo",
                "getfile",
                "getencoder",
                "getdoc",
                "getdlopenflags",
                "getdefaultencoding",
                "getdecoder",
                "getcomments",
                "getclasstree",
                "getargvalues",
                "getargspec",
                "get_threshold",
                "get_suffixes",
                "get_referrers",
                "get_opcodes",
                "get_objects",
                "get_matching_blocks",
                "get_magic",
                "get_debug",
                "get_close_matches",
                "GeneratorType",
                "gc",
                "garbage",
                "FunctionType",
                "function",
                "FrameType",
                "fpectl",
                "formatwarning",
                "formatargvalues",
                "formatargspec",
                "format_tb",
                "format_stack",
                "format_list",
                "format_exception_only",
                "format_exception",
                "floordiv",
                "FloatType",
                "FloatingPointError",
                "flags",
                "fix",
                "finditer",
                "findall",
                "find_module",
                "find_longest_match",
                "find",
                "filterwarnings",
                "FileType",
                "factory",
                "extract_tb",
                "extract_stack",
                "expandtabs",
                "expand",
                "exitfunc",
                "exit",
                "executable",
                "exec_prefix",
                "exception",
                "excepthook",
                "exc_value",
                "exc_type",
                "exc_traceback",
                "exc_info",
                "endpos",
                "end",
                "EncodedFile",
                "encode",
                "enable",
                "else",
                "EllipsisType",
                "dumps",
                "dumps",
                "dump",
                "dump",
                "dump",
                "dllhandle",
                "div",
                "displayhook",
                "disable",
                "digits",
                "digit",
                "Differ",
                "DictType",
                "DictionaryType",
                "delslice",
                "delitem",
                "def",
                "decomposition",
                "decode",
                "decimal",
                "DEBUG_UNCOLLECTABLE",
                "DEBUG_STATS",
                "DEBUG_SAVEALL",
                "DEBUG_OBJECTS",
                "DEBUG_LEAK",
                "DEBUG_INSTANCES",
                "DEBUG_COLLECTABLE",
                "data",
                "currentframe",
                "cPickle",
                "countOf",
                "count",
                "copyright",
                "copy_reg",
                "copy",
                "Cookie",
                "contains",
                "constructor",
                "concat",
                "ComplexType",
                "compile_command",
                "compile_command",
                "Compile",
                "compare",
                "CommandCompiler",
                "combining",
                "collect",
                "CodeType",
                "codeop",
                "code",
                "code",
                "close",
                "clecheckcache",
                "clear_memo",
                "ClassType",
                "classobj",
                "class",
                "cgi",
                "center",
                "category",
                "capwords",
                "capitalize",
                "CallableProxyType",
                "calcsize",
                "C_EXTENSION",
                "C_BUILTIN",
                "byteorder",
                "BuiltinMethodType",
                "BuiltinFunctionType",
                "builtin_module_names",
                "BufferType",
                "bidirectional",
                "atol",
                "atoi",
                "atof",
                "atexit",
                "ascii_uppercase",
                "ascii_lowercase",
                "ascii_letters",
                "aRepr",
                "and_",
                "add",
                "abs",
                "_getframe",
                "__xor__",
                "__truediv__",
                "__sub__",
                "__stdout__",
                "__stdin__",
                "__stderr__",
                "__setslice__",
                "__setitem__",
                "__rshift__",
                "__repeat__",
                "__pos__",
                "__or__",
                "__neg__",
                "__ne__",
                "__mul__",
                "__mod__",
                "__main__",
                "__lt__",
                "__lshift__",
                "__le__",
                "__invert__",
                "__inv__",
                "__gt__",
                "__getslice__",
                "__getitem__",
                "__ge__",
                "__floordiv__",
                "__excepthook__",
                "__eq__",
                "__div__",
                "__displayhook__",
                "__delslice__",
                "__delitem__",
                "__contains__",
                "__concat__",
                "__builtin__",
                "__and__",
                "__add__",
                "__abs__",
            ]
        )
},
    });
}