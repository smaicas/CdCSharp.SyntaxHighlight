using CdCSharp.SyntaxHighlight.Patterns;
using System.Drawing;

namespace CdCSharp.SyntaxHighlight.Languages;

public partial class Definitions
{
    public static Definition MsilDefinition = new(
        name: "Msil",
        caseSensitive: true,
        style: new Style(
            new ColorPair(
                foreColor: Color.FromName("black"),
                backColor: Color.FromName("transparent")
            ),
            new Font(
                name: "monospace",
                size: 16f,
                style: FontStyle.Regular
            )
        ),
        patterns: new Dictionary<string, Pattern>()
    {
{
    "PreprocessorDirective", new WordPattern(
            name: "PreprocessorDirective",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("green"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            words:
            [
                ".addon",
                ".algorithm",
                ".assembly",
                ".backing",
                ".blob",
                ".capability",
                ".cctor",
                ".class",
                ".comtype",
                ".config",
                ".corflags",
                ".ctor",
                ".custom",
                ".data",
                ".emitbyte",
                ".entrypoint",
                ".event",
                ".exeloc",
                ".export",
                ".field",
                ".file",
                ".fire",
                ".get",
                ".hash",
                ".imagebase",
                ".implicitcom",
                ".library",
                ".line",
                "#line",
                ".locale",
                ".locals",
                ".manifestres",
                ".maxstack",
                ".method",
                ".mime",
                ".module",
                ".mresource",
                ".namespace",
                ".originator",
                ".os",
                ".other",
                ".override",
                ".pack",
                ".param",
                ".permission",
                ".permissionset",
                ".processor",
                ".property",
                ".publickey",
                ".publickeytoken",
                ".removeon",
                ".set",
                ".size",
                ".subsystem",
                ".title",
                ".try",
                ".ver",
                ".vtable",
                ".vtentry",
                ".vtfixup",
                ".zeroinit",
            ]
        )
},
{
    "Keywords", new WordPattern(
            name: "Keywords",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("blue"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            words:
            [
                "abstract",
                "algorithm",
                "alignment",
                "ansi",
                "any",
                "array",
                "as",
                "assembly",
                "assert",
                "at",
                "auto",
                "autochar",
                "beforefieldinit",
                "blob",
                "blob_object",
                "bool",
                "boxed",
                "bstr",
                "bytearray",
                "byvalstr",
                "callmostderived",
                "carray",
                "catch",
                "cdecl",
                "cf",
                "char",
                "cil",
                "class",
                "clsid",
                "compilercontrolled",
                "currency",
                "custom",
                "date",
                "decimal",
                "default",
                "demand",
                "deny",
                "disablejitoptimizer",
                "enablejittracking",
                "error",
                "explicit",
                "extends",
                "extern",
                "false",
                "famandassem",
                "family",
                "famorassem",
                "fastcall",
                "fault",
                "field",
                "filetime",
                "filter",
                "final",
                "finally",
                "fixed",
                "float",
                "float32",
                "float64",
                "forwardref",
                "fromunmanaged",
                "fullorigin",
                "handler",
                "hidebysig",
                "hresult",
                "idispatch",
                "il",
                "implements",
                "implicitcom",
                "implicitres",
                "import",
                "in",
                "inf",
                "inheritcheck",
                "init",
                "initonly",
                "instance",
                "int",
                "int16",
                "int32",
                "int64",
                "int8",
                "interface",
                "internalcall",
                "iunknown",
                "java",
                "lasterr",
                "lateinit",
                "lcid",
                "linkcheck",
                "literal",
                "lpstr",
                "lpstruct",
                "lptstr",
                "lpvoid",
                "lpwstr",
                "managed",
                "marshal",
                "method",
                "modopt",
                "modreq",
                "nan",
                "native",
                "nested",
                "newslot",
                "noappdomain",
                "noinlining",
                "nomachine",
                "nomangle",
                "nometadata",
                "noncasdemand",
                "noncasinheritance",
                "noncaslinkdemand",
                "noprocess",
                "not_in_gc_heap",
                "notserialized",
                "null",
                "object",
                "objectref",
                "ole",
                "opt",
                "optil",
                "out",
                "permitonly",
                "pinned",
                "pinvokeimpl",
                "prejitdeny",
                "prejitgrant",
                "preservesig",
                "private",
                "privatescope",
                "public",
                "publickey",
                "readonly",
                "record",
                "reqmin",
                "reqopt",
                "reqrefuse",
                "reqsecobj",
                "request",
                "retval",
                "rtspecialname",
                "runtime",
                "safearray",
                "sealed",
                "sequential",
                "serializable",
                "specialname",
                "static",
                "stdcall",
                "storage",
                "stored_object",
                "stream",
                "streamed_object",
                "string",
                "struct",
                "synchronized",
                "syschar",
                "sysstring",
                "tbstr",
                "thiscall",
                "tls",
                "to",
                "true",
                "typedref",
                "unicode",
                "unmanaged",
                "unmanagedexp",
                "unsigned",
                "userdefined",
                "value",
                "valuetype",
                "vararg",
                "variant",
                "vector",
                "virtual",
                "void",
                "wchar",
                "winapi",
                "with",
            ]
        )
},
{
    "Instructions", new WordPattern(
            name: "Instructions",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("blue"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            words:
            [
                "add",
                "add.ovf",
                "add.ovf.un",
                "and",
                "ann.call",
                "ann.catch",
                "ann.data",
                "ann.data.s",
                "ann.dead",
                "ann.def",
                "ann.hoisted",
                "ann.hoisted_call",
                "ann.lab",
                "ann.live",
                "ann.phi",
                "ann.ref",
                "ann.ref.s",
                "arglist",
                "beq",
                "beq.s",
                "bge",
                "bge.s",
                "bge.un",
                "bge.un.s",
                "bgt",
                "bgt.s",
                "bgt.un",
                "bgt.un.s",
                "ble",
                "ble.s",
                "ble.un",
                "ble.un.s",
                "blt",
                "blt.s",
                "blt.un",
                "blt.un.s",
                "bne.un",
                "bne.un.s",
                "box",
                "box_old",
                "br",
                "break",
                "brfalse",
                "brfalse.s",
                "brinst",
                "brinst.s",
                "brnull",
                "brnull.s",
                "br.s",
                "brtrue",
                "brtrue.s",
                "brzero",
                "brzero.s",
                "call",
                "calli",
                "callvirt",
                "castclass",
                "ceq",
                "cgt",
                "cgt.un",
                "ckfinite",
                "clt",
                "clt.un",
                "conv.i",
                "conv.i1",
                "conv.i2",
                "conv.i4",
                "conv.i8",
                "conv.ovf.i",
                "conv.ovf.i1",
                "conv.ovf.i1.un",
                "conv.ovf.i2",
                "conv.ovf.i2.un",
                "conv.ovf.i4",
                "conv.ovf.i4.un",
                "conv.ovf.i8",
                "conv.ovf.i8.un",
                "conv.ovf.i.un",
                "conv.ovf.u",
                "conv.ovf.u1",
                "conv.ovf.u1.un",
                "conv.ovf.u2",
                "conv.ovf.u2.un",
                "conv.ovf.u4",
                "conv.ovf.u4.un",
                "conv.ovf.u8",
                "conv.ovf.u8.un",
                "conv.ovf.u.un",
                "conv.r4",
                "conv.r8",
                "conv.r.un",
                "conv.u",
                "conv.u1",
                "conv.u2",
                "conv.u4",
                "conv.u8",
                "cpblk",
                "cpobj",
                "div",
                "div.un",
                "dup",
                "endfault",
                "endfilter",
                "endfinally",
                "initblk",
                "initobj",
                "isinst",
                "jmp",
                "jmpi",
                "ldarg",
                "ldarg.0",
                "ldarg.1",
                "ldarg.2",
                "ldarg.3",
                "ldarga",
                "ldarga.s",
                "ldarg.s",
                "ldc.i4",
                "ldc.i4.0",
                "ldc.i4.1",
                "ldc.i4.2",
                "ldc.i4.3",
                "ldc.i4.4",
                "ldc.i4.5",
                "ldc.i4.6",
                "ldc.i4.7",
                "ldc.i4.8",
                "ldc.i4.m1",
                "ldc.i4.M1",
                "ldc.i4.s",
                "ldc.i8",
                "ldc.r4",
                "ldc.r8",
                "ldelema",
                "ldelem.i",
                "ldelem.i1",
                "ldelem.i2",
                "ldelem.i4",
                "ldelem.i8",
                "ldelem.r4",
                "ldelem.r8",
                "ldelem.ref",
                "ldelem.u1",
                "ldelem.u2",
                "ldelem.u4",
                "ldelem.u8",
                "ldfld",
                "ldflda",
                "ldftn",
                "ldind.i",
                "ldind.i1",
                "ldind.i2",
                "ldind.i4",
                "ldind.i8",
                "ldind.r4",
                "ldind.r8",
                "ldind.ref",
                "ldind.u1",
                "ldind.u2",
                "ldind.u4",
                "ldind.u8",
                "ldlen",
                "ldloc",
                "ldloc.0",
                "ldloc.1",
                "ldloc.2",
                "ldloc.3",
                "ldloca",
                "ldloca.s",
                "ldloc.s",
                "ldnull",
                "ldobj",
                "ldptr",
                "ldsfld",
                "ldsflda",
                "ldstr",
                "ldtoken",
                "ldvirtftn",
                "leave",
                "leave.s",
                "localloc",
                "mkrefany",
                "mul",
                "mul.ovf",
                "mul.ovf.un",
                "mul.un",
                "neg",
                "newarr",
                "newobj",
                "nop",
                "not",
                "or",
                "pop",
                "refanytype",
                "refanyval",
                "rem",
                "rem.un",
                "ret",
                "rethrow",
                "shl",
                "shr",
                "shr.un",
                "sizeof",
                "starg",
                "starg.s",
                "stelem.i",
                "stelem.i1",
                "stelem.i2",
                "stelem.i4",
                "stelem.i8",
                "stelem.r4",
                "stelem.r8",
                "stelem.ref",
                "stfld",
                "stind.i",
                "stind.i1",
                "stind.i2",
                "stind.i4",
                "stind.i8",
                "stind.r4",
                "stind.r8",
                "stind.ref",
                "stloc",
                "stloc.0",
                "stloc.1",
                "stloc.2",
                "stloc.3",
                "stloc.s",
                "stobj",
                "stsfld",
                "sub",
                "sub.ovf",
                "sub.ovf.un",
                "switch",
                "tail",
                "tail.",
                "throw",
                "unbox",
                "volatile",
                "volatile.",
                "xor",
            ]
        )
},
{
    "Operator", new WordPattern(
            name: "Operator",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("red"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            words:
            [
                "+",
                "-",
                "=",
                "%",
                "*",
                "/",
                "&",
                "~",
                "|",
                "^",
                "==",
            ]
        )
},
{
    "String", new BlockPattern(
            name: "String",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("#666666"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            beginsWith: "\"",
            endsWith: "\"",
            escapesWith: "\\"
        )
},
{
    "Comment", new BlockPattern(
            name: "Comment",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("green"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            beginsWith: "//",
            endsWith: "\n",
            escapesWith: ""
        )
},
{
    "char", new BlockPattern(
            name: "char",
            style: new Style(
                new ColorPair(
                    foreColor: Color.FromName("red"),
                    backColor: Color.FromName("transparent")
                ),
                new Font(
                    name: "monospace",
                    size: 16f,
                    style: FontStyle.Regular
                )
            ),
            beginsWith: "'",
            endsWith: "'",
            escapesWith: "\\"
        )
},
    });
}